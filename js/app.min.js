(function(){window.App={};window.Settings={numPosts:25,after:[],currentPage:1,subreddit:"",commentsOpen:false,nsfw:false,subredditsArray:["1000Words","4chan","AFOL","AMA","PersonalFinance","Jobs","Entrepreneur","Paleo","Productivity","GetDisciplined","MaleLifestyle","EveryManShouldKnow","MechanicalAdvice","HomeImprovement","History","AbandonedPorn","AdventureTime","Advice","AdviceAnimals","AlbumArtPorn","Anarchism","Android","Angel","Anime","Announcements","Anthropology","AntiConsumption","AntiJokes",
"Antitheism","Anxiety","Apple","Archeology","ArrestedDevelopment","Art","ArtPorn","AskCulinary","AskReddit","AskScience","Atheism","Autos","Aww","BMW","Batman","Beards","Beer","BestOf","Bikinis","BirdsWithArms","BlackAndWhite","Blog","Boobs","Books","BreakingBad","Business","CFB","Cars","Cats","Chemistry","Cinemagraphs","CircleJerk","Cities","Coffee","ComicBooks","Comics","Community","CompSci","Computers","Cooking","CrappyArt","CreepyGIFs","CringePics","CultTrailers","DIY","DailyProgrammers","Diablo3",
"Disney","DoctorWho","Documentaries","DoesAnybodyElse","EarthPorn","EarthPorn","Economics","Entertainment","Facepalm","Fallout","Fashion","FiftyFifty","FirstWorldAnarchists","Fishing","Fitness","FixedGearBicycle","Food","FoodPorn","Freebies","Frugal","Funny","GIFs","GameGrumps","GameMusic","GameOfThrones","GamePhysics","GamerNews","Gaming","Geek","GentlemanBoners","GetMotivated","GlutenFree","GuildWars2","HALO","HIMYM","HTML5","HappyGirls","HarryPotter","Hipster","HipsterGurlz","Hotties","Humor",
"IAmA","ITookAPicture","IWantToLearn","Images","IndieGaming","Israel","JailBait","Javascript","Jokes","LGBT","LadyBoners","LanguageLearning","LeagueOfLegends","LearnUselessTalents","Libertarian","LifeProTips","LoL","LoLCats","MURICA","MagicTCG","MakeupAddiction","MaleFashionAdvice","MassEffect","Meme","MensRight","MildlyInteresting","Minecraft","Mommit","Movies","MusicVideos","MyLittlePony","NBA","NFL","NewsPorn","NoFap","ObscureMedia","OffBeat","PHP","PerfectLoops","PhilosophyOfScience","Pics","Pokemon",
"Politics","PornFree","Portland","PrettyGirls","Privacy","Programming","RandomActsOfGaming","RandomSexyGIFs","ReactionGIFs","RealGirls","Recipes","RedditForGrownUps","RedditLaqueristas","RuneScape","Sailing","Science","Scifi","Sexy","Shit_to_watch_online","Skyrim","SnackExchange","Spotify","SquaredCircle","StarWars","Starcraft","StreetArt","Survival","TF2","Tattoos","Technology","TheLastAirbender","TheWarZ","TodayILearned","Trailers","Travel","TreePorn","Trees","TrollXChromosomes","TrueGaming","TrueReddit",
"UnheardOf","Videos","WTF","Warhammer","WebDev","WhereDidTheSodaGo","Wikipedia","Wine","WoahDude","Women","WorldNews","Yoga","YouShouldKnow","Zelda","fffffffuuuuuuuuuuuu","twoXchromosomes","xxFitness","Cute","WTFJapan","Wallpapers","MinimalWallpaper"],subredditsImage:["IAmA","AskReddit","bestof","todayilearned"]};window.Elements={loader:'<div class="loader"></div>'};window.Lib={capitalise:function(string){return string.charAt(0).toUpperCase()+string.slice(1)},excerpt:function(str,nwords){var words=
str.split(" "),start=words.slice(0,nwords),end=words.slice(nwords,words.length-1);if(start.length!=words.length)return start.join(" ")+'<span class="dots"> &hellip; </span><span class="fullText"> '+end.join(" ")+'</span><span class="showFull">Show whole post</span>';else return str},formatDate:function(timestamp){var d=new Date(timestamp*1E3),days=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],day=days[d.getDay()],date=
d.getDate(),month=months[d.getMonth()],year=d.getFullYear(),hour=d.getHours()>10?d.getHours():"0"+d.getHours(),minutes=d.getMinutes()>10?d.getMinutes():"0"+d.getMinutes(),formated=day+", "+date+" "+month+" "+year+" "+hour+":"+minutes;return formated},urlify:function(text){var regExp=/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;return text.replace(regExp,"<a href='$1' target='_blank'>$1</a>")},createCookie:function(name,value,days){var expires;if(days){var date=new Date;
date.setTime(date.getTime()+days*24*60*60*1E3);expires="; expires="+date.toGMTString()}else expires="";document.cookie=name+"="+value+expires+"; path=/"},readCookie:function(name){var n=name+"=",ca=document.cookie.split(";");for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)==" ")c=c.substring(1,c.length);if(c.indexOf(n)===0)return c.substring(n.length,c.length)}return false},eraseCookie:function(name){Lib.createCookie(name,"",-1)}}})();App.Post=Backbone.Model.extend({defaults:{}});
App.PostView=Backbone.View.extend({tagName:"div",className:"post cf",tpl_header:_.template('\t\t<% if(this.model.collection.indexOf(this.model) === this.model.collection.length-1 ) { this.$el.addClass("last"); } %>\t\t<div class="postHeader cf">\t\t\t<h3><%= title %></h3>\t\t\t<div class="score"><%= score %></div>\t\t</div>\t'),tpl_footer:_.template('\t\t<div class="postFooter cf">\t\t\t<div class="meta">\t\t\t\t<p class="origin">\t\t\t\t\tPosted by <a class="author" href="http://www.reddit.com/user/<%= author %>" target="_blank"><%= author %></a>\t\t\t\t\ton <a class="subreddit" href="#<%= subreddit %>"><%= subreddit %></a>\t\t\t\t</p>\t\t\t\t<p class="time"><%= time %></p>\t\t\t</div>\t\t\t<div class="links">\t\t\t\t<a class="showComments" href="#" data-permalink="<%= permalink %>">Comments (<%= num_comments %>)</a> | \t\t\t\t<a class="toReddit" href="http://www.reddit.com/<%= permalink %>" target="_blank">View on Reddit</a>\t\t\t</div>\t\t</div>\t'),
tpl_default:_.template('\t\t<div class="postContent cf">\t\t\t<a href="<%= url %>" class="oembed"><%= url %></a>\t\t\t<a href="<%= url %>" class="toArticle" target="_blank">Link to the article</a>\t\t</div>\t'),tpl_image:_.template('\t\t<div class="postContent cf">\t\t\t<a href="<%= url %>" target="_blank"><img src="<%= url %>"></a>\t\t</div>\t'),tpl_post:_.template('\t\t<div class="postContent cf">\t\t\t<p class="text"><%= Lib.excerpt(Lib.urlify(selftext), 100) %></p>\t\t</div>\t'),tpl_reddit:_.template('\t\t<div class="postContent cf">\t\t\t<img src="css/img/<%= subreddit %>.png" alt="<%= subreddit %>" />\t\t\t<% if(selftext){%>\t\t\t\t<p class="text"><%= Lib.excerpt(Lib.urlify(selftext), 100) %></p>\t\t\t<% } else { %>\t\t\t\t<a href="<%= url %>" class="oembed"><%= url %></a>\t\t\t\t<a href="<%= url %>" class="toArticle" target="_blank">Link to the article</a>\t\t\t<% } %>\t\t</div>\t'),
tpl_imgur:_.template('\t\t<div class="postContent cf">\t\t\t<a href="<%= url %>.jpg" target="_blank"><img src="<%= url %>.jpg"></a>\t\t</div>\t'),tpl_imguralb:_.template('\t\t<div class="postContent cf">\t\t\t<iframe class="imgur-album" width="100%" height="550" frameborder="0" src="<%= url %>/embed"></iframe>\t\t</div>\t'),tpl_video:_.template('\t\t<div class="postContent cf">\t\t\t<iframe src="<%= embed %>" width="100%" height="350" frameborder="0" allowfullscreen></iframe>\t\t</div>\t'),tpl_nsfw:_.template('\t\t<div class="postContent cf">\t\t<div class="nsfw_check">\t\t\t<p>This post is marked <strong>"Not Safe For Work"</strong>, to display it, check "Show NSFW" in the Settings.</p>\t\t</div>\t\t</div>\t'),
tpl_comment:_.template('\t\t<div id="comments">\t\t\t<div id="commentsHeader">\t\t\t\t<a href="#" id="closeComments" title="Close comments">X</a>\t\t\t\t<h4><%= this.model.get("title") %></h4>\t\t\t</div>\t\t\t<div id="commentsContent"><div class="loader"></div></div>\t\t</div>\t'),events:{"click .showComments":"showComments","click .showFull":"showFullText"},render:function(){this.model.set("time",Lib.formatDate(this.model.get("created")));var type=this.getTypeOfLink(),modelData=this.model.toJSON(),
showNsfw=Settings.nsfw;this.$el.html(this.tpl_header(modelData));if(!this.model.get("over_18")||this.model.get("over_18")&&showNsfw)switch(type){case "image":this.$el.append(this.tpl_image(modelData));break;case "reddit":this.$el.append(this.tpl_reddit(modelData));break;case "post":this.$el.append(this.tpl_post(modelData));break;case "imgur":this.$el.append(this.tpl_imgur(modelData));break;case "imguralb":this.$el.append(this.tpl_imguralb(modelData));break;case "video":this.$el.append(this.tpl_video(modelData));
break;default:this.$el.append(this.tpl_default(modelData));break}else this.$el.append(this.tpl_nsfw());this.$el.append(this.tpl_footer(modelData));return this},getTypeOfLink:function(){var link=this.model.get("url"),lastPart=link.split(".")[link.split(".").length-1];if(lastPart==="jpg"||lastPart==="png"||lastPart==="gif")return"image";else if((new RegExp("^(?!.*/a/).*imgur.*$","i")).test(link))return"imgur";else if((new RegExp("imgur.com/a/")).test(link))return"imguralb";else if(Settings.subredditsImage.indexOf(this.model.get("subreddit"))>
-1)return"reddit";else if(this.model.get("selftext"))return"post";else if((new RegExp("youtube.com")).test(link)){var embed=link.split("v=")[1];embed=embed.split("&")[0];embed="http://www.youtube.com/embed/"+embed;this.model.set("embed",embed);return"video"}else if((new RegExp("youtu.be")).test(link)){var embed=link.split("/")[3];embed="http://www.youtube.com/embed/"+embed;this.model.set("embed",embed);return"video"}else if((new RegExp("vimeo")).test(link)){var split=link.split("/"),embed="http://player.vimeo.com/video/"+
split[split.length-1];this.model.set("embed",embed);return"video"}},showComments:function(e){e.preventDefault();var permalink=$(e.currentTarget).data("permalink"),title=this.model.get("title");var commentsCollection=new App.CommentsCollection([],{url:"http://www.reddit.com"+permalink+".json?jsonp=?&sort=top",op:this.model.get("author")});var commentsCollectionView=new App.CommentsCollectionView({collection:commentsCollection});if(!Settings.commentsOpen){$(this.tpl_comment()).appendTo($("body")).animate({right:0},
400);Settings.commentsOpen=true}else{$("#commentsHeader h4").text(title);$("#commentsContent").html($('<div class="loader"></div>'))}this.closeComments()},closeComments:function(){$("#closeComments").on("click",function(e){e.preventDefault();Settings.commentsOpen=false;var $comments=$("#comments"),width=$comments.outerWidth();$("#comments").animate({right:-width},400,function(){$("#comments").remove()})})},showFullText:function(){this.$el.find(".fullText").show();this.$el.find(".dots").hide();this.$el.find(".showFull").hide()}});
App.PostCollection=Backbone.Collection.extend({model:App.Post,initialize:function(models,options){this.url=options.url;this.fetch()},parse:function(response){var parsed=[],children=response.data.children;Settings.after.push(response.data.after);for(var child in children)parsed.push(children[child].data);return parsed}});
App.PostCollectionView=Backbone.View.extend({tagName:"div",className:"contentWrapper",template:_.template('\t\t<div id="pages">\t\t\t<% if (Settings.after.length > 1) { %>\t\t\t\t<a href="#" id="previous">Previous</a>\t\t\t<% } %>\t\t\t<a href="#" id="next">Next</a>\t\t</div>\t'),events:{"click #next":"nextPage","click #previous":"previousPage"},initialize:function(){$("#content").html(Elements.loader);this.collection.on("sync",this.render,this)},render:function(){this.$el.html(this.template());this.collection.each(this.renderPost,
this);$("#content").html(this.$el);this.loadOembed();return this},renderPost:function(post){var postView=new App.PostView({model:post});this.$el.append(postView.render().el)},nextPage:function(e){e.preventDefault();var url;Settings.currentPage++;if(Settings.subreddit)url="http://www.reddit.com/r/"+Settings.subreddit+"/.json?jsonp=?&limit="+Settings.numPosts+"&sort=new&after="+Settings.after[Settings.after.length-1];else url="http://www.reddit.com/.json?jsonp=?&limit="+Settings.numPosts+"&after="+
Settings.after[Settings.after.length-1];var newPostCollection=new App.PostCollection([],{url:url});var newPostCollectionView=new App.PostCollectionView({collection:newPostCollection})},previousPage:function(){var url;Settings.after.pop();Settings.after.pop();Settings.currentPage--;if(Settings.subreddit)url="http://www.reddit.com/r/"+Settings.subreddit+"/.json?jsonp=?&limit="+Settings.numPosts+"&sort=new&after="+Settings.after[Settings.after.length-1];else url="http://www.reddit.com/.json?jsonp=?&limit="+
Settings.numPosts+"&after="+Settings.after[Settings.after.length-1];var newPostCollection=new App.PostCollection([],{url:url});var newPostCollectionView=new App.PostCollectionView({collection:newPostCollection})},loadOembed:function(){$("a.oembed").oembed()}});
App.InputView=Backbone.View.extend({el:"#search",events:{"keypress input":"filter","focus input":"enlarge","blur input":"shrink"},initialize:function(){var array=Settings.subredditsArray;this.$el.find("input").autocomplete({minLength:2,source:function(req,resp){var res=$.ui.autocomplete.filter(array,req.term);resp(res.slice(0,5))},select:function(e,ui){var r=ui.item.value;$(this).val("").blur();window.location.href="#"+r}})},enlarge:function(){this.$el.animate({width:300},400)},shrink:function(){this.$el.animate({width:205},
400)},filter:function(e){if(e.keyCode===13)this.submit()},submit:function(){var r=this.$el.find("input").val();this.$el.find("input").val("").blur();window.location.href="#"+r}});App.MobileInputView=Backbone.View.extend({el:"#mobileSearch",events:{"keypress input":"filter"},filter:function(e){if(e.keyCode===13){this.submit();$.sidr("close")}},submit:function(){var r=this.$el.find("input").val();this.$el.find("input").val("").blur();window.location.href="#"+r}});App.Comment=Backbone.Model.extend({});
App.CommentView=Backbone.View.extend({tagName:"li",className:"comment cf",events:{"click .toggleReplies":"toggleReplies"},template:_.template('\t\t<% if(this.model.get("replies") && this.model.get("replies").length > 1) { %>\t\t\t<a href="#" class="toggleReplies closed" title="Show replies">[+]</a>\t\t<% } %>\t\t<p class="author <% if(this.model.get("author") == this.model.collection.op){ %> op <% } %>"><%= this.model.get("author") %></p>\t\t<p class="score" title="Comment\'s score"><%= this.model.get("ups") - this.model.get("downs") %></p>\t\t<p class="body"><%= this.model.get("body") %></p>\t\t<% if(this.model.get("replies") && this.model.get("replies").length > 1) { %>\t\t\t<ul class="replies">\t\t\t\t<% for (var i = 0, rep = this.model.get("replies") ; i < rep.length - 1 ; i++) { %>\t\t\t\t\t<li class="cf">\t\t\t\t\t\t<p class="author <% if(rep[i].data.author == this.model.collection.op){ %>op<% } %>"><%= rep[i].data.author %></p>\t\t\t\t\t\t<p class="score"><%= rep[i].data.ups - rep[i].data.downs %></p>\t\t\t\t\t\t<p class="body"><%= Lib.urlify(rep[i].data.body) %></p>\t\t\t\t\t</li>\t\t\t\t<% } %>\t\t\t</ul>\t\t<% } %>\t'),
render:function(){if(this.model.get("replies"))this.model.set("replies",this.model.get("replies").data.children);this.$el.html(this.template(this.model.toJSON()));return this},toggleReplies:function(e){e.preventDefault();if($(e.currentTarget).hasClass("closed"))$(e.currentTarget).text("[-]").removeClass("closed").parent().find("ul").slideDown();else $(e.currentTarget).text("[+]").addClass("closed").parent().find("ul").slideUp()}});
App.CommentsCollection=Backbone.Collection.extend({model:App.Comment,initialize:function(models,options){this.url=options.url;this.op=options.op;this.fetch()},parse:function(response){var parsed=[],children=response[1].data.children;for(var child in children)parsed.push(children[child].data);return parsed}});
App.CommentsCollectionView=Backbone.View.extend({tagName:"ul",initialize:function(){this.collection.on("sync",this.render,this)},render:function(){this.collection.each(this.renderComment,this);$("#commentsContent").html(this.$el);return this},renderComment:function(comment){var commentView=new App.CommentView({model:comment});this.$el.append(commentView.render().el)}});
App.Router=Backbone.Router.extend({routes:{"":"index",":r":"subreddit","post/:id":"singlePost","*other":"returnToIndex"},index:function(){var postCollection=new App.PostCollection([],{url:"http://www.reddit.com/.json?jsonp=?&limit="+Settings.numPosts+"&sort=new"});var postCollectionView=new App.PostCollectionView({collection:postCollection})},subreddit:function(r){$("#current").text(r);document.title=Lib.capitalise(r)+" | Reddit-Roll";Settings.subreddit=r;Settings.after=[];var newPostCollection=new App.PostCollection([],
{url:"http://www.reddit.com/r/"+r+"/.json?jsonp=?&limit="+Settings.numPosts+"&sort=new"});var newPostCollectionView=new App.PostCollectionView({collection:newPostCollection})},singlePost:function(id){console.log("post route:"+id)},returnToIndex:function(){window.location.href="index.html"}});
$(function(){if(Lib.readCookie("nsfw")){Settings.nsfw=true;$(".nsfw").prop("checked","checked")}if(Lib.readCookie("numPosts")){var value=Lib.readCookie("numPosts");Settings.numPosts=value;$(".numPosts").val(value);$(".numPostsValue").text(value)}new App.Router;Backbone.history.start();var inputView=new App.InputView;var MobileInputView=new App.MobileInputView;$("#settings").on("click",function(e){e.preventDefault();if($(this).hasClass("closed"))$(".settings").slideDown();else $(".settings").slideUp();
$(this).toggleClass("closed")});$("#suggestions").on("click",function(e){e.preventDefault();if($(this).hasClass("closed"))$(".suggestions").slideDown();else $(".suggestions").slideUp();$(this).toggleClass("closed")});$(".nsfw").on("click",function(){if($(this).prop("checked")){Settings.nsfw=true;Lib.createCookie("nsfw",true,365)}else{Settings.nsfw=false;Lib.eraseCookie("nsfw")}});$(".numPosts").on("change",function(){var value=$(this).val();$(".numPostsValue").text(value)});$(".numPosts").mouseup(function(){var value=
$(this).val();Settings.numPosts=value;Lib.createCookie("numPosts",value,365)});$("#randomSubreddit").on("click",function(e){e.preventDefault();var arr=Settings.subredditsArray,rd=Math.floor(Math.random()*arr.length),r=arr[rd];window.location.href="#"+r});$(".suggestions a").on("click",function(e){e.preventDefault();var $this=$(this),$ul=$this.parent().find("ul");$this.toggleClass("open");if($this.hasClass("open"))$ul.slideDown();else $ul.slideUp()});$(".suggested-r a").on("click",function(e){e.preventDefault();
var r=$(this).text();window.location.href="#"+r});$(".mobileMenu").sidr()});